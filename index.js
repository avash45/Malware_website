//----------------------------------------------Importing modules and creating objects--------

const express = require("express")                          //variable
const bodyParser = require("body-parser")                
const path = require('path')
const mysql = require('mysql')
const sessions = require('express-session');
const app = express()         //object created
app.use(express.static(path.join(__dirname, '/views')))
app.use(bodyParser.urlencoded({ extended: true }))
app.set('view engine', 'ejs')                               //set view engine
//--------------------------------------------------Initializing a session--------------------

var session;
app.use(sessions({
    secret: "secretkey",
    saveUninitialized: true,
    resave: false
}));

//-----------------------------------------------------Database---------------------------------

const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    database: 'malware_website'
})
db.connect((err) => {
    if (err) {
        throw err;
    }
    console.log('SQL Connected')
});

//----------------------------------------------------Login-------------------------------------

app.get("/", function (req, res) {
    req.session.destroy();
    res.render("html/login.ejs");
});

app.post("/", function (req, res) {
    var email = req.body.email
    var password = req.body.password
    let sql = "SELECT * FROM USERS WHERE email='" + email + "' AND password='" + password + "';";
    db.query(sql, (err, result) => {
        if (err) throw err;
        if (result.length == 0) {
            res.send("No accounts found");
        }
        else {
            session = req.session;
            session.userid = email;
            let name = "Welcome " + result[0].username
            res.render('html/homepage.ejs', { data: { name: name } })
        }
    });
});

//---------------------------------------------------Register--------------------------------

app.get("/register", function (req, res) {
    res.render("html/register.ejs");
});

app.post("/register", function (req, res) {
    var email = req.body.email
    var username = req.body.username
    var password = req.body.password
    console.log(email + " " + password + " " + username)
    let sql = "SELECT * FROM USERS WHERE email='" + email + "' ";
    db.query(sql, (err, result) => {
        if (err) throw err;
        if (result.length == 0) {
            let sql = "INSERT INTO USERS VALUES('" + email + "' , '" + password + "' , '" + username + "');"
            db.query(sql, (err, result) => {
                if (err) throw err;
                console.log('Data inserted');
                console.log('Login to continue');
                res.render('html/login.ejs')
            })
        }
        else {
            res.send('Account already created')
            res.render('html/login.ejs')
        }
    });
});

//-------------------------------------------------Forget password page--------------------------------

app.get("/forgot", function (req, res) {
    res.render("html/forgot.ejs");
});

app.post("/forgot", function (req, res) {
    var email = req.body.email
    var username = req.body.username
    var password = req.body.password
    let sql = "SELECT * FROM USERS WHERE email='" + email + "' AND username='" + username + "';";
    db.query(sql, (err, result) => {
        if (err) throw err;
        if (result.length == 0) {
            res.send("No accounts found. Recheck your inputs");
        }
        else {
            let sql = "UPDATE USERS SET password='" + password + "' where email='" + email + "';";
            db.query(sql, (err, result) => {
                if (err) throw err;
                res.send("Updated")
            });
        }
    });
});

//---------------------------------------------------------Homepage--------------------------------

app.get("/homepage", function (req, res) {
    session = req.session
    if (session.userid) {
        let name = "Hey there ;)"
        res.render("html/homepage.ejs", { data: { name: name } });
    }
    else {
        res.send("Can't display Homepage. Login first.")
    }
})

app.get("/faq", function (req, res) {
    session = req.session
    if (session.userid) {
        let name = "Hey there ;)"
        res.render("html/faq.ejs");
    }
    else {
        res.send("Can't display FAQ page. Login first.")
    }
})

//-----------------------------------------------------Windows download-----------------------

app.get("/softwares/windows_downloads/", function (req, res) {
    session = req.session
    if (session.userid) {
        let sql = "SELECT * FROM SOFTWARES GROUP BY software_name;";
        db.query(sql, (err, result) => {
            if (err) throw err;
            res.render("html/softwares/windows_downloads.ejs",{data:{result:result}});
        });
    }
    else {
        res.send("No URL found. Login first");
    }
});

app.get("/softwares/windows_downloads/download", function (req, res) {
    session = req.session
    if (session.userid) {
        res.download("exe_files/windows_installer.exe");
    }
    else {
        res.send("No URL found. Login first");
    }
});

//-------------------------------------------------------------MAC OS Download-----------------------

app.get("/softwares/mac_downloads/", function (req, res) {
    session = req.session
    if (session.userid) {
        let sql = "SELECT * FROM SOFTWARES GROUP BY software_name;";
        db.query(sql, (err, result) => {
            if (err) throw err;
            res.render("html/softwares/mac_downloads.ejs",{data:{result:result}});
        });
    }
    else {
        res.send("No URL found. Login first");
    }
});


app.get("/softwares/mac_downloads/download", function (req, res) {
    session = req.session
    if (session.userid) {
        res.download("exe_files/mac_installer.exe");
    }
    else {
        res.send("No URL found. Login first");
    }
});

//-----------------------------------------------------------Android download-----------------------

app.get("/softwares/android_downloads/", function (req, res) {
    session = req.session
    if (session.userid) {
        let sql = "SELECT * FROM SOFTWARES GROUP BY software_name;";
        db.query(sql, (err, result) => {
            if (err) throw err;
            res.render("html/softwares/android_downloads.ejs",{data:{result:result}});
        });
    }
    else {
        res.send("No URL found. Login first");
    }
});

app.get("/softwares/android_downloads/download", function (req, res) {
    session = req.session
    if (session.userid) {
        res.download("exe_files/jar.apk");
    }
    else {
        res.send("No URL found. Login first");
    }
});

//------------------------------------------------------------Linux-------------------------------------

app.get("/softwares/linux_downloads/", function (req, res) {
    session = req.session
    if (session.userid) {
        let sql = "SELECT * FROM SOFTWARES GROUP BY software_name;";
        db.query(sql, (err, result) => {
            if (err) throw err;
            res.render("html/softwares/linux_downloads.ejs",{data:{result:result}});
        });
    }
    else {
        res.send("No URL found. Login first");
    }
});

app.get("/softwares/linux_downloads/download", function (req, res) {
    session = req.session
    if (session.userid) {
        res.download("exe_files/linux_installer.exe");
    }
    else {
        res.send("No URL found. Login first");
    }
});

//------------------------------------------------------------Set port-----------------------------

app.listen("3000", function () {
    console.log("Server started on port: 3000");
});
